{"mappings":"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","sources":["src/js/shared/listener-btn-learnmore.js","src/js/modal-ingredients/modal-ingredients.js","src/js/catalog/handle-cocktails-click-action.js","src/js/shared/handle-Learn-More-Btn-Click.js","src/js/shared/handle-ingredient-modal-open.js"],"sourcesContent":["import '../modal-ingredients/modal-ingredients';\nimport { handleCocktailClickAction } from '../catalog/handle-cocktails-click-action';\n\nimport { handleCocktailClickAction } from '../catalog/handle-cocktails-click-action';\nimport { handleIngredientModalOpen } from './handle-ingredient-modal-open';\nconst catalogList = document.querySelector('.catalog__list');\n\ncatalogList.addEventListener('click', handleCocktailClickAction);\n","const closeModalBtn = document.querySelector('[data-modal-close]');\nconst backdrop = document.querySelector('.backdrop-cocktails');\nconst backdropModalCocktails = document.querySelector('.backdrop-cocktails');\n\ncloseModalBtn.addEventListener('click', closeModal);\nbackdropModalCocktails.addEventListener('click', e => {\n  if (!e.target.classList.contains('backdrop-cocktails')) {\n    return;\n  }\n\n  closeModal();\n});\n\nfunction closeModal() {\n  backdrop.classList.add('hidden');\n  document.body.style.overflow = 'auto';\n}\n","import { handleLearnMoreBtnClick } from \"../shared/handle-Learn-More-Btn-Click\";\n\nexport function handleCocktailClickAction(event) {\n    if (event.target.nodeName !== 'BUTTON') {\n        return;\n    }\n\n    const action = event.target.dataset.action;\n    const cocktailId = event.target.dataset.id;\n\n    if (action === 'learn_more') {\n        handleLearnMoreBtnClick(cocktailId);\n    } else if (action === 'favorite') {\n        // провіряємо чи є у LocalStorage (\"улюблених\") айді цього коктейлю, та якщо ні - добавляємо\n    }\n}","import { getCocktailsDetailsById } from './api-service';\n\nexport function handleLearnMoreBtnClick(selectedCocktail) {\n  const modalWindow = document.querySelector('[data-modal-cocktails]');\n  const backdrop = document.querySelector('.backdrop-cocktails');\n\n  getCocktailsDetailsById(selectedCocktail).then(({ drinks }) => {\n    const ingredientsMeasure = [];\n    const ingredients = [];\n\n    const listMarkup = [];\n\n    for (let ingr in drinks[0]) {\n      if (ingr.includes('strIngredient') && drinks[0][ingr] !== null) {\n        ingredients.push(drinks[0][ingr]);\n      }\n    }\n\n    for (let measure in drinks[0]) {\n      if (measure.includes('strMeasure') && drinks[0][measure] !== null) {\n        ingredientsMeasure.push(drinks[0][measure]);\n      }\n    }\n\n    for (let i = 0; i < ingredients.length; i += 1) {\n      listMarkup.push(`<li class=\"modal-cocktails__item\">\n      ✶ ${ingredientsMeasure[i] || ''}<span class=\"ingredient\" name='${\n        ingredients[i]\n      }'>${ingredients[i]}</span>\n\n      <a class=\"modal-cocktails__link\" href=\"javascript:void(0);\">Ingridient</a>\n\n    </li>`);\n    }\n    const list = listMarkup.join(' ');\n    const markup = `<h1 class=\"modal-cocktails__title\">${drinks[0].strDrink}</h1>\n      <h2 class=\"modal-cocktails__subtitle\">INSTRACTION:</h2>\n      <p class=\"modal-cocktails__descrip\">\n       ${drinks[0].strInstructions}\n      </p>\n      <img\n        class=\"modal-cocktails__img\"\n        src=\"${drinks[0].strDrinkThumb}\"\n        alt=\"modal-cocktails\"\n        width=\"280px\"\n        height=\"280px\"\n      />\n      <h2 class=\"modal-cocktails__conteine\">INGREDIENTS</h2>\n      <p class=\"modal-cocktails__per\">Per cocktail</p>\n      <ul class=\"modal-cocktails__list\">\n        ${list}\n      </ul>`;\n\n      modalWindow.innerHTML = markup;\n      backdrop.classList.remove('hidden');\n      document.body.style.overflow = 'hidden';\n  });\n}\n","import { getCocktailIngredientByName } from './api-service';\nconst ingredientList = document.querySelector('.modal-cocktails');\nconst closeBtn = document.querySelector('[data-btn-close]');\nconst backdrop = document.querySelector('.backdrop-cocktails');\nconst ingredientModalWindow = document.querySelector(\n  '[data-ingredient-window]'\n);\ningredientList.addEventListener('click', handleIngredientModalOpen);\ncloseBtn.addEventListener('click', handleIngredientModalClose);\n\nfunction handleIngredientModalClose(e) {\n  ingredientModalWindow.classList.add('hidden');\n  backdrop.classList.remove('hidden');\n}\n\nfunction handleIngredientModalOpen(e) {\n  console.log(e.target);\n  if (e.target.nodeName !== 'SPAN') return;\n  else {\n    const selectedIngredient = e.target.textContent;\n    const ingredientWindow = document.querySelector('[data-ingredient-window]');\n    const markupContainer = document.querySelector(\n      '.modal-ingredient__wrapper'\n    );\n    const addToFavoriteBtn = document.querySelector('.js-modal-ingredient');\n    getCocktailIngredientByName(selectedIngredient).then(({ ingredients }) => {\n      const ingredient = ingredients[0];\n      const markup = `\n    <h3 class=\"modal-ingredient__title\">${\n      ingredient.strIngredient || 'this ingredient is not found'\n    }</h3>\n    <p class=\"modal-ingredient__descr\">${ingredient.strType || 'none'}</p>\n    <p class=\"modal-ingredient__text\">\n      <span class=\"modal-ingredient__name\">${\n        ingredient.strIngredient || 'this ingredient is not found'\n      }</span> ${ingredient.strDescription || 'description is not found'}\n    </p>\n    <ul class=\"modal-ingredient__list\">\n      <li class=\"modal-ingredient__item\">Type: ${\n        ingredient.strIngredient || ' '\n      }</li>\n      <li class=\"modal-ingredient__item\">Country of origin:</li>\n      <li class=\"modal-ingredient__item\">Alcohol by volume: ${\n        ingredient.strABV || ' '\n      }%</li>\n      <li class=\"modal-ingredient__item\">Flavour:</li>\n    </ul>`;\n      markupContainer.innerHTML = markup;\n      backdrop.classList.add('hidden');\n      ingredientModalWindow.classList.remove('hidden');\n      document.body.style.overflow = 'hidden';\n      addToFavoriteBtn.value = ingredient.idIngredient;\n    });\n  }\n}\n"],"names":["parcelRequire","document","querySelector","addEventListener","$9jazP","handleCocktailClickAction","$31c04622757b165f$var$closeModalBtn","$31c04622757b165f$var$backdrop","$31c04622757b165f$var$backdropModalCocktails","$31c04622757b165f$var$closeModal","classList","add","body","style","overflow","e","target","contains","$4WyST","$6c6e17be60e816b1$export$1b1c36cc2fee4abf","event","nodeName","action","dataset","cocktailId","id","handleLearnMoreBtnClick","$hF5kJ","$3997a3809a6a0902$export$d9a6a80374ebd169","selectedCocktail","modalWindow","backdrop","getCocktailsDetailsById","then","drinks","ingredientsMeasure","ingredients","listMarkup","ingr","includes","push","measure","i","length","list","join","markup","strDrink","strInstructions","strDrinkThumb","innerHTML","remove","$40750150a2e01e6a$var$ingredientList","$40750150a2e01e6a$var$closeBtn","$40750150a2e01e6a$var$backdrop","$40750150a2e01e6a$var$ingredientModalWindow","console","log","selectedIngredient","textContent","markupContainer","addToFavoriteBtn","getCocktailIngredientByName","ingredient","strIngredient","strType","strDescription","strABV","value","idIngredient"],"version":3,"file":"index.d9400353.js.map"}